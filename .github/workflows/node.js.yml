# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  pull_request:
    types:
      - closed
    branches: 
      - "main"
permissions:
  id-token: write
  contents: read
jobs:
  deploy:
    if: github.event.pull_request.merged == true
    name: Deploy to server on master
    runs-on: ubuntu-latest
    environment: Production
    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/
    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4.0.1
      with:
        role-to-assume:  ${{secrets.AWS_ROLE}}
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: ${{ vars.AWS_DEFAULT_REGION }}
    - name: Get Public IP
      id: ip
      uses: haythem/public-ip@v1.3
      
    - name: Add Github Actions IP to Security group
      run: |
        aws ec2 authorize-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32

    - name: "Checkout files"
      uses: actions/checkout@v3
  
    - name: Deploy to server
      uses: easingthemes/ssh-deploy@main
      env:
          SSH_PRIVATE_KEY: ${{ secrets.SERVER_KEY }}
          REMOTE_HOST: ${{ secrets.SERVER_HOST }}
          REMOTE_USER: ${{ secrets.SERVER_USERNAME }}
          TARGET: ${{ secrets.SERVER_DEPLOY_TARGET }}
    - name: Remove Github Actions IP from security group
      run: |
        aws ec2 revoke-security-group-ingress --group-id ${{ secrets.AWS_SG_ID }} --protocol tcp --port 22 --cidr ${{ steps.ip.outputs.ipv4 }}/32
    
